// Parameters
var info = 50
var warn = 80
var crit = 90
var infoSig = 2.5
var warnSig = 3
var critSig = 3.5
var period = 10s
var every = 10s

// Dataframe
var data = stream
  |from()
    .database('telegraf')
    .retentionPolicy('autogen')
    .measurement('cpu')
    .groupBy('host')
  |window()
    .period(period)
    .every(every)
  |mean('usage_idle')
  |eval(lambda: 100.0 - "mean")
    .as('stat')

// Thresholds
var alert = data
  |eval(lambda: sigma("stat"))
    .as('sigma')
    .keep()
  |alert()
    .id('{{ .Name }}/{{ .Group }}')
    .message('{{ .ID }} is {{ .Level }} value:{{ index .Fields "stat" | printf "%0.2f" }}')
    // .info(lambda: "stat" > info OR "sigma" > infoSig)
    // .warn(lambda: "stat" > warn OR "sigma" > warnSig)
    // .crit(lambda: "stat" > crit OR "sigma" > critSig)
    .info(lambda: "stat" > info)
    .warn(lambda: "stat" > warn)
    .crit(lambda: "stat" > crit)
    .stateChangesOnly(60m)

// Alert
alert
  .post('http://kapacitor-alert-api.default:3000/api/alert')
